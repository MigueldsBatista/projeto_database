import api from './api';

/**
 * Serviço para gerenciar pedidos
 * Fornece funções para realizar operações nos pedidos
 * Generated by Copilot
 */
export const ordersService = {
  /**
   * Busca todos os pedidos cadastrados no sistema
   * @returns {Promise} Promise com a lista de pedidos
   */
  getAll: async () => {
    const response = await api.get('/pedidos');
    return response.data;
  },

  /**
   * Busca um pedido específico pelo ID
   * @param {number} id - ID do pedido a ser buscado
   * @returns {Promise} Promise com os dados do pedido
   */
  getById: async (id) => {
    const response = await api.get(`/pedidos/${id}`);
    return response.data;
  },

  /**
   * Atualiza o status de um pedido
   * @param {number} id - ID do pedido a ser atualizado
   * @param {string} status - Novo status do pedido (PENDENTE, EM_PREPARO, ENTREGUE, CANCELADO)
   * @returns {Promise} Promise com os dados do pedido atualizado
   */
  updateStatus: async (id, status) => {
    const response = await api.patch(`/pedidos/update/status/${id}`, { status });
    return response.data;
  },

  /**
   * Associa uma camareira a um pedido
   * @param {Object} order - Objeto do pedido com as informações atualizadas, incluindo a camareira
   * @returns {Promise} Promise com os dados do pedido atualizado
   */
  assignHousekeeper: async (order) => {
    const response = await api.put('/pedidos/update', order);
    return response.data;
  },
  
  /**
   * Busca pedidos por status
   * @param {string} status - Status dos pedidos a serem buscados
   * @returns {Promise} Promise com a lista de pedidos com o status especificado
   */
  getByStatus: async (status) => {
    const response = await api.get(`/pedidos/status/${status}`);
    return response.data;
  },
  
  /**
   * Busca pedidos associados a uma camareira específica
   * @param {number} housekeeperId - ID da camareira
   * @returns {Promise} Promise com a lista de pedidos da camareira
   */
  getByHousekeeper: async (housekeeperId) => {
    const response = await api.get(`/pedidos/camareira/${housekeeperId}`);
    return response.data;
  },

  /**
   * Obtém a média diária de pedidos (throughput)
   * @returns {Promise} Promise com os dados de throughput de pedidos
   */
  getOrdersThroughput: async () => {
    const response = await api.get(`/pedidos/media-diaria`);
    return response.data;
  },

};
